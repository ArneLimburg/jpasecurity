<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.1//EN" "file://../../dtd/docbook/xml/simple/1.1/sdocbook.dtd">
<article id="preface">
  <title>Preface</title>
  <para>
    Developing enterprise software applications with security requirements 
    can be a cumbersome and error-prone process. In such applications often
    the security is spread all over the application code. This makes it difficult
    to understand how things work and hard to maintain security in such code.
  </para>
  <para>
    With model-driven development business logic should be expressed in the objects of your domain model.
    When working with JPA this objects normally are Entity Beans or Embeddables.
    As for now there is no convenient way to express access control requirements through your domain model.
    Hence access control-code is normally written into the service layer or data-access layer.
  </para>
  <para>
    JPA Security offers a way to express access control through your domain model
    and additionally supplies a solution to completely separate access control logic from business logic,
    improving performance and maintainability.
    JPA Security provides an interface to define security requirements of your
    domain model via configuration (Annotations or XML).
  </para>
  <para>
	It is designed to extend current security solutions like J2EE Security
    and Spring Security (formerly known as Acegi-Security),
    but may be used on its own, too. It enables you to configure rules defining access control
    for your JPA Entity Beans and Embeddables based on the currently authenticated user
    and/or its roles in the application.
  </para>
</article>
