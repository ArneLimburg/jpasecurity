<security xmlns="http://jpasecurity.sf.net/xml/ns/security"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://jpasecurity.sf.net/xml/ns/security http://jpasecurity.sf.net/xml/ns/security/security_1_0.xsd"
          version="1.0">

  <persistence-unit name="simple-contacts">
    <access-rule>GRANT READ ACCESS TO Contact contact WHERE contact.owner = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO Contact contact WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
    <access-rule>GRANT READ ACCESS TO User user WHERE user = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO User user WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="spring-contacts">
    <access-rule>GRANT ACCESS TO Contact contact WHERE contact.owner.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO Contact contact WHERE 'ROLE_ADMIN' IN (CURRENT_ROLES)</access-rule>
    <access-rule>GRANT ACCESS TO User user WHERE user.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO User user WHERE 'ROLE_ADMIN' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="annotation-based-field-access">
    <access-rule>GRANT ACCESS TO FieldAccessAnnotationTestBean bean WHERE bean.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO FieldAccessAnnotationTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="annotation-based-method-access">
    <access-rule>GRANT ACCESS TO MethodAccessAnnotationTestBean bean WHERE bean.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO MethodAccessAnnotationTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="xml-based-field-access">
    <access-rule>GRANT ACCESS TO FieldAccessXmlTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="access-check">
    <access-rule>GRANT CREATE ACCESS TO FieldAccessAnnotationTestBean bean WHERE 'creator' IN (CURRENT_ROLES)</access-rule>
    <access-rule>GRANT READ ACCESS TO FieldAccessAnnotationTestBean bean WHERE bean.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO FieldAccessAnnotationTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="parent-child">
    <access-rule>GRANT ACCESS TO ParentTestBean bean WHERE bean.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO ParentTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
    <access-rule>GRANT ACCESS TO ChildTestBean bean WHERE bean.name = CURRENT_PRINCIPAL</access-rule>
    <access-rule>GRANT ACCESS TO ChildTestBean bean WHERE 'admin' IN (CURRENT_ROLES)</access-rule>
  </persistence-unit>

  <persistence-unit name="with-clause">
     <access-rule>
       GRANT ACCESS TO MethodAccessAnnotationTestBean bean
         WHERE 'admin' in (CURRENT_ROLES)
     </access-rule>
    <access-rule>
      GRANT ACCESS TO MethodAccessAnnotationTestBean b
        WHERE EXISTS (SELECT bean FROM MethodAccessAnnotationTestBean bean JOIN bean.parent parent
                      WITH parent.name = 'user2' WHERE b = bean AND bean.name = CURRENT_PRINCIPAL)
    </access-rule>
  </persistence-unit>

  <persistence-unit name="acl-model">
     <access-rule>
       GRANT ACCESS TO AbstractAclProtectedEntity bean
         WHERE (bean.trademarkId is null OR bean.trademarkId = CURRENT_PRINCIPAL)
                AND (
                  EXISTS ( SELECT entry FROM Acl acl JOIN acl.entries entry JOIN entry.group entry_group
                             WHERE acl = bean.accessControlList AND
                    EXISTS(
                      SELECT user from User user JOIN user.groups user_group
                         WHERE entry_group = user_group AND user.id in (CURRENT_ROLES)
                    )
                  )
                  OR bean.accessControlList is null
                )
     </access-rule>
  </persistence-unit>

  <persistence-unit name="alias">
    <access-rule>
      GRANT CREATE ACCESS TO User user
    </access-rule>
  	<access-rule>
      GRANT ACCESS TO User user
        WHERE EXISTS (SELECT COUNT(DISTINCT contact)
          FROM Contact contact
          JOIN contact.owner owner 
          WHERE owner = user)
  	</access-rule>
  </persistence-unit>
</security>
